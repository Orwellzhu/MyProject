/**
 * 客户端统计脚本
 * 
 * 类似的在网页添加如下代码即可，id是站点id
 * <script src="http://flux.pep.com.cn/index.js?id=*"></script>
 * 
 * 脚本获取客户端信息后，会向 http://flux.pep.com.cn/api/flux?site=*&data=* 地址提交
 */
/*
var ua = new UserAgent();

var result = {
    OS:               ua.OS,
    OS_VERSION:       ua.OS_VERSION,
    BROWSER:          ua.BROWSER,
    BROWSER_ENGINE:   ua.BROWSER_ENGINE,
    BROWSER_VERSION:  ua.BROWSER_VERSION,
    USER_AGENT:       ua.USER_AGENT,
    LANGUAGE:         ua.LANGUAGE,
    WEB_VIEW:         ua.WEB_VIEW,
    DEVICE:           ua.DEVICE,
    AOSP:             ua.AOSP,
    iOS:              ua.iOS,
    Android:          ua.Android
};
*/
setTimeout(function(){
"use strict";
var global = window
// Microsoft Edge   - https://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx
// Firefox          - https://developer.mozilla.org/ja/docs/Gecko_user_agent_string_reference
// WebView          - https://developer.chrome.com/multidevice/user-agent#webview_user_agent
//                  - https://developer.chrome.com/multidevice/webview/overview#does_the_new_webview_have_feature_parity_with_chrome_for_android_

// --- dependency modules ----------------------------------
// --- define / local variables ----------------------------
var BROWSER_ENGINES = {
    "Chrome":           "Blink",
    "Firefox":          "Gecko",
    "IE":               "Trident",
    "Edge":             "Trident",
    "AOSP":             "WebKit",
    "Safari":           "WebKit",
    "WebKit":           "WebKit",
    "Chrome for iOS":   "WebKit"
};

// --- class / interfaces ----------------------------------
function UserAgent(userAgent, // @arg String = navigator.userAgent
                   options) { // @arg Object = {} - { WEB_VIEW, DISPLAY_DPR, DISPLAY_LONG, DISPLAY_SHORT }
    options = options || {};

    var nav                 = global["navigator"] || {};
    var ua                  = userAgent || nav["userAgent"] || "";
    var os                  = _detectOS(ua);
    var osVersion           = _detectOSVersion(ua, os);
    var browser             = _detectBrowser(ua);
    var browserVersion      = _detectBrowserVersion(ua, browser);
    var device              = _detectDevice(ua, os, osVersion, options);
    var lang                = (nav["language"] ||
                               nav["userLanguage"] || "en").split("-", 1)[0]; // "en-us" -> "en"
    this._OS                = os;
    this._OS_VERSION        = osVersion;
    this._BROWSER           = browser;
    this._BROWSER_ENGINE    = BROWSER_ENGINES[browser] || "";
    this._BROWSER_VERSION   = browserVersion;
    this._MOBILE            = /Android|iOS/.test(os) || /Windows Phone/.test(ua);
    this._USER_AGENT        = ua;
    this._LANGUAGE          = lang;
    this._WEB_VIEW          = _isWebView(ua, os, browser, browserVersion, options);
    this._DEVICE            = device;
    this._AOSP              = _isAOSP(ua, os, browser, parseFloat(browserVersion));
    this["ES5"]             = /native/.test(Object["keys"] + "");
    this["ES6"]             = /native/.test(String["raw"]  + "");
}
UserAgent["WEB_VIEW"]    = null;
//UserAgent["repository"]  = "https://github.com/uupaa/UserAgent.js";
try{
UserAgent["prototype"] = Object.create(UserAgent, {
    "constructor":      { "value": UserAgent  }, // new UserAgent():UserAgent
    "OS":               { "get":   function()  { return this._OS;               } }, // "Android", "iOS", "Windows", "Mac", "Firefox", "Chrome OS", ""
    "OS_VERSION":       { "get":   function()  { return this._OS_VERSION;       } }, // Semver. "{{Major}},{{Minor}},{{Patch}}"
    "MOBILE":           { "get":   function()  { return this._MOBILE;           } }, // is Mobile OS. Android os iOS or WindowsPhone
    "BROWSER":          { "get":   function()  { return this._BROWSER;          } }, // "Chrome for iOS", "Edge", "Chrome", "Firefox", "AOSP", "IE", "Safari", "WebKit", ""
    "BROWSER_ENGINE":   { "get":   function()  { return this._BROWSER_ENGINE;   } }, // "Blink", "Gecko", "Trident", "WebKit", ""
    "BROWSER_VERSION":  { "get":   function()  { return this._BROWSER_VERSION;  } }, // Semver. "{{Major}},{{Minor}},{{Patch}}"
    "USER_AGENT":       { "get":   function()  { return this._USER_AGENT;       } }, // UserAgent.
    "LANGUAGE":         { "get":   function()  { return this._LANGUAGE;         } }, // Language. "en", "ja", ...
    "WEB_VIEW":         { "get":   function()  { return this._WEB_VIEW;         } }, // is WebView.
    "DEVICE":           { "get":   function()  { return this._DEVICE;           } }, // Device name.
    "AOSP":             { "get":   function()  { return this._AOSP;             } }, // is AOSP Stock UserAgent.
    // --- shorthand ---
    "Android":          { "get":   function()  { return this._OS === "Android"; } }, // is Android
    "iOS":              { "get":   function()  { return this._OS === "iOS";     } }, // is iOS
    // --- accessor ---
    "get":              { "value": function(k)    { return this["_" + k];       } }, // UserAgent#get(key:String):Any
    "set":              { "value": function(k, v) {        this["_" + k] = v;   } } // UserAgent#set(key:String, value:Any):void
});
}catch(e){
    
    
}
// --- implements ------------------------------------------
function _detectOS(ua) {
    switch (true) {
    case /Android/.test(ua):            return "Android";
    case /iPhone|iPad|iPod/.test(ua):   return "iOS";
    case /Windows/.test(ua):            return "Windows";
    case /Mac OS X/.test(ua):           return "Mac";
    case /CrOS/.test(ua):               return "Chrome OS";
    case /Firefox/.test(ua):            return "Firefox OS";
    }
    return "";
}

function _detectOSVersion(ua, os) {
    switch (os) {
    case "Android":                     return _getVersion(ua, "Android");
    case "iOS":                         return _getVersion(ua, /OS /);
    case "Windows":                     return _getVersion(ua, /Phone/.test(ua) ? /Windows Phone (?:OS )?/
                                                                                : /Windows NT/);
    case "Mac":                         return _getVersion(ua, /Mac OS X /);
    }
    return "0.0.0";
}

function _detectBrowser(ua) {
    switch (true) {
    case /CriOS/.test(ua):              return "Chrome for iOS"; // https://developer.chrome.com/multidevice/user-agent
    case /Edge/.test(ua):               return "Edge";
    case /Chrome/.test(ua):             return "Chrome";
    case /Firefox/.test(ua):            return "Firefox";
    case /Android/.test(ua):            return "AOSP"; // AOSP stock browser
    case /MSIE|Trident/.test(ua):       return "IE";
    case /Safari\//.test(ua):           return "Safari";
    case /AppleWebKit/.test(ua):        return "WebKit";
    }
    return "";
}

function _detectBrowserVersion(ua, browser) {
    switch (browser) {
    case "Chrome for iOS":              return _getVersion(ua, "CriOS/");
    case "Edge":                        return _getVersion(ua, "Edge/");
    case "Chrome":                      return _getVersion(ua, "Chrome/");
    case "Firefox":                     return _getVersion(ua, "Firefox/");
    case "AOSP":                        return _getVersion(ua, /Silk/.test(ua) ? "Silk/" : "Version/");
    case "IE":                          return /IEMobile/.test(ua) ? _getVersion(ua, "IEMobile/")
                                             : /MSIE/.test(ua)     ? _getVersion(ua, "MSIE ") // IE 10
                                                                   : _getVersion(ua, "rv:");  // IE 11
    case "Safari":                      return _getVersion(ua, "Version/");
    case "WebKit":                      return _getVersion(ua, "WebKit/");
    }
    return "0.0.0";
}

function _detectDevice(ua, os, osVersion, options) {
    var screen        = global["screen"] || {};
    var screenWidth   = screen["width"]  || 0;
    var screenHeight  = screen["height"] || 0;
    var dpr           = options["DISPLAY_DPR"]   || global["devicePixelRatio"] || 1.0;
    var long_         = options["DISPLAY_LONG"]  || Math.max(screenWidth, screenHeight);
    var short_        = options["DISPLAY_SHORT"] || Math.min(screenWidth, screenHeight);
    var retina        = dpr >= 2;
    var longEdge      = Math.max(long_, short_); // iPhone 4s: 480, iPhone 5: 568

    switch (os) {
    case "Android":                     return _getAndroidDevice(ua, retina);
    case "iOS":                         return _getiOSDevice(ua, retina, longEdge, osVersion);
    }
    return "";
}

function _getAndroidDevice(ua, retina) {
    if (/Firefox/.test(ua)) { return ""; } // exit Firefox for Android
    try {
        var result = ua.split("Build/")[0].split(";").slice(-1).join().trim().
                     replace(/^SonyEricsson/, "").
                     replace(/^Sony/, "").replace(/ 4G$/, "");
        if (result === "Nexus 7") {
            return retina ? "Nexus 7 2nd" // Nexus 7 (2013)
                          : "Nexus 7";    // Nexus 7 (2012)
        }
        return result;
    } catch ( o__o ) {
        // ignore
    }
    return "";
}

function _getiOSDevice(ua, retina, longEdge, osVersion) {
    var WebGLDetector = {};
    if ("detect" in WebGLDetector) { WebGLDetector["detect"](); }
    var glVersion = WebGLDetector["WEBGL_VERSION"] || "";
  //var SGX535 = /535/.test(glVersion); // iPhone 3GS, iPhone 4
    var SGX543 = /543/.test(glVersion); // iPhone 4s/5/5c, iPad 2/3, iPad mini
    var SGX554 = /554/.test(glVersion); // iPad 4
    var A7     = /A7/.test(glVersion);  // iPhone 5s, iPad mini 2/3, iPad Air
    var A8X    = /A8X/.test(glVersion); // A8X, iPad Air 2
    var A8     = /A8/.test(glVersion);  // A8,  iPhone 6/6+, iPad mini 4, iPod touch 6
    var A9     = /A9/.test(glVersion);  // A9, A9X, iPhone 6s/6s+, iPad Pro

    if (/iPhone/.test(ua)) {
        return !retina         ? "iPhone 3GS"
             : longEdge <= 480 ? (SGX543 || osVersion >= 8 ? "iPhone 4s" : "iPhone 4") // iPhone 4 stopped in iOS 7.
             : longEdge <= 568 ? (A7 ? "iPhone 5s"      : "iPhone 5") // iPhone 5 or iPhone 5c
             : longEdge <= 667 ? (A9 ? "iPhone 6s"      : "iPhone 6")
             : longEdge <= 736 ? (A9 ? "iPhone 6s Plus" : "iPhone 6 Plus") : "";
    } else if (/iPad/.test(ua)) {
        return !retina         ? "iPad 2" // iPad 1/2, iPad mini
             : SGX543          ? "iPad 3"
             : SGX554          ? "iPad 4"
             : A7              ? "iPad mini 2" // iPad mini 3, iPad Air
             : A8X             ? "iPad Air 2"
             : A8              ? "iPad mini 4"
             : A9              ? "iPad Pro" : "";
    } else if (/iPod/.test(ua)) {
        return longEdge <= 480 ? (retina ? "iPod touch 4" : "iPod touch 3")
                               : (A8     ? "iPod touch 6" : "iPod touch 5");
    }
    return "";
}

function _getVersion(ua, token) { // @ret SemverString - "0.0.0"
    try {
        return _normalizeSemverString( ua.split(token)[1].trim().split(/[^\w\.]/)[0] );
    } catch ( o_O ) {
        // ignore
    }
    return "0.0.0";
}

function _normalizeSemverString(version) { // @arg String - "Major.Minor.Patch"
                                           // @ret SemverString - "Major.Minor.Patch"
    var ary = version.split(/[\._]/); // "1_2_3" -> ["1", "2", "3"]
                                      // "1.2.3" -> ["1", "2", "3"]
    return ( parseInt(ary[0], 10) || 0 ) + "." +
           ( parseInt(ary[1], 10) || 0 ) + "." +
           ( parseInt(ary[2], 10) || 0 );
}

function _isAOSP(ua, os, browser, version) { // @ret Boolean - is AOSP Stock UserAgent
    if (os === "Android" && browser === "AOSP") {
        if (!/Silk/.test(ua)) {
            if (version >= 4.0 && version < 4.4) {
                return true;
            }
        }
    }
    return false;
}

function _isWebView(ua, os, browser, version, options) { // @ret Boolean - is WebView
    switch (os + browser) {
    case "iOSSafari":       return false;
    case "iOSWebKit":       return _isWebView_iOS(options);
    case "AndroidAOSP":     return false; // can not accurately detect
    case "AndroidChrome":   return parseFloat(version) >= 42 ? /; wv/.test(ua)
                                 : /\d{2}\.0\.0/.test(version) ? true // 40.0.0, 37.0.0, 36.0.0, 33.0.0, 30.0.0
                                 : _isWebView_Android(options);
    }
    return false;
}

function _isWebView_iOS(options) { // @arg Object - { WEB_VIEW }
                                   // @ret Boolean
    // Chrome 15++, Safari 5.1++, IE11, Edge, Firefox10++
    // Android 5.0 ChromeWebView 30: webkitFullscreenEnabled === false
    // Android 5.0 ChromeWebView 33: webkitFullscreenEnabled === false
    // Android 5.0 ChromeWebView 36: webkitFullscreenEnabled === false
    // Android 5.0 ChromeWebView 37: webkitFullscreenEnabled === false
    // Android 5.0 ChromeWebView 40: webkitFullscreenEnabled === false
    // Android 5.0 ChromeWebView 42: webkitFullscreenEnabled === ?
    // Android 5.0 ChromeWebView 44: webkitFullscreenEnabled === true
    var document = (global["document"] || {});

    if ("WEB_VIEW" in options) {
        return options["WEB_VIEW"];
    }
    return !("fullscreenEnabled"       in document ||
             "webkitFullscreenEnabled" in document || false);
}

function _isWebView_Android(options) { // @arg Object - { WEB_VIEW }
    // Chrome 8++
    // Android 5.0 ChromeWebView 30: webkitRequestFileSystem === false
    // Android 5.0 ChromeWebView 33: webkitRequestFileSystem === false
    // Android 5.0 ChromeWebView 36: webkitRequestFileSystem === false
    // Android 5.0 ChromeWebView 37: webkitRequestFileSystem === false
    // Android 5.0 ChromeWebView 40: webkitRequestFileSystem === false
    // Android 5.0 ChromeWebView 42: webkitRequestFileSystem === false
    // Android 5.0 ChromeWebView 44: webkitRequestFileSystem === false
    if ("WEB_VIEW" in options) {
        return options["WEB_VIEW"];
    }
    return !("requestFileSystem"       in global ||
             "webkitRequestFileSystem" in global || false);
}

global.UserAgent = UserAgent



/*
// 获取 performance 数据
var performance = {  
    // memory 是非标准属性，只在 Chrome 有
    // 财富问题：我有多少内存
    memory: {
        usedJSHeapSize:  16100000, // JS 对象（包括V8引擎内部对象）占用的内存，一定小于 totalJSHeapSize
        totalJSHeapSize: 35100000, // 可使用的内存
        jsHeapSizeLimit: 793000000 // 内存大小限制
    },
 
    //  哲学问题：我从哪里来？
    navigation: {
        redirectCount: 0, // 如果有重定向的话，页面通过几次重定向跳转而来
        type: 0           // 0   即 TYPE_NAVIGATENEXT 正常进入的页面（非刷新、非重定向等）
                          // 1   即 TYPE_RELOAD       通过 window.location.reload() 刷新的页面
                          // 2   即 TYPE_BACK_FORWARD 通过浏览器的前进后退按钮进入的页面（历史记录）
                          // 255 即 TYPE_UNDEFINED    非以上方式进入的页面
    },
 
    timing: {
        // 在同一个浏览器上下文中，前一个网页（与当前页面不一定同域）unload 的时间戳，如果无前一个网页 unload ，则与 fetchStart 值相等
        navigationStart: 1441112691935,
 
        // 前一个网页（与当前页面同域）unload 的时间戳，如果无前一个网页 unload 或者前一个网页与当前页面不同域，则值为 0
        unloadEventStart: 0,
 
        // 和 unloadEventStart 相对应，返回前一个网页 unload 事件绑定的回调函数执行完毕的时间戳
        unloadEventEnd: 0,
 
        // 第一个 HTTP 重定向发生时的时间。有跳转且是同域名内的重定向才算，否则值为 0 
        redirectStart: 0,
 
        // 最后一个 HTTP 重定向完成时的时间。有跳转且是同域名内部的重定向才算，否则值为 0 
        redirectEnd: 0,
 
        // 浏览器准备好使用 HTTP 请求抓取文档的时间，这发生在检查本地缓存之前
        fetchStart: 1441112692155,
 
        // DNS 域名查询开始的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
        domainLookupStart: 1441112692155,
 
        // DNS 域名查询完成的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
        domainLookupEnd: 1441112692155,
 
        // HTTP（TCP） 开始建立连接的时间，如果是持久连接，则与 fetchStart 值相等
        // 注意如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接开始的时间
        connectStart: 1441112692155,
 
        // HTTP（TCP） 完成建立连接的时间（完成握手），如果是持久连接，则与 fetchStart 值相等
        // 注意如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接完成的时间
        // 注意这里握手结束，包括安全连接建立完成、SOCKS 授权通过
        connectEnd: 1441112692155,
 
        // HTTPS 连接开始的时间，如果不是安全连接，则值为 0
        secureConnectionStart: 0,
 
        // HTTP 请求读取真实文档开始的时间（完成建立连接），包括从本地读取缓存
        // 连接错误重连时，这里显示的也是新建立连接的时间
        requestStart: 1441112692158,
 
        // HTTP 开始接收响应的时间（获取到第一个字节），包括从本地读取缓存
        responseStart: 1441112692686,
 
        // HTTP 响应全部接收完成的时间（获取到最后一个字节），包括从本地读取缓存
        responseEnd: 1441112692687,
 
        // 开始解析渲染 DOM 树的时间，此时 Document.readyState 变为 loading，并将抛出 readystatechange 相关事件
        domLoading: 1441112692690,
 
        // 完成解析 DOM 树的时间，Document.readyState 变为 interactive，并将抛出 readystatechange 相关事件
        // 注意只是 DOM 树解析完成，这时候并没有开始加载网页内的资源
        domInteractive: 1441112693093,
 
        // DOM 解析完成后，网页内资源加载开始的时间
        // 在 DOMContentLoaded 事件抛出前发生
        domContentLoadedEventStart: 1441112693093,
 
        // DOM 解析完成后，网页内资源加载完成的时间（如 JS 脚本加载执行完毕）
        domContentLoadedEventEnd: 1441112693101,
 
        // DOM 树解析完成，且资源也准备就绪的时间，Document.readyState 变为 complete，并将抛出 readystatechange 相关事件
        domComplete: 1441112693214,
 
        // load 事件发送给文档，也即 load 回调函数开始执行的时间
        // 注意如果没有绑定 load 事件，值为 0
        loadEventStart: 1441112693214,
 
        // load 事件的回调函数执行完毕的时间
        loadEventEnd: 1441112693215
 
        // 字母顺序
        // connectEnd: 1441112692155,
        // connectStart: 1441112692155,
        // domComplete: 1441112693214,
        // domContentLoadedEventEnd: 1441112693101,
        // domContentLoadedEventStart: 1441112693093,
        // domInteractive: 1441112693093,
        // domLoading: 1441112692690,
        // domainLookupEnd: 1441112692155,
        // domainLookupStart: 1441112692155,
        // fetchStart: 1441112692155,
        // loadEventEnd: 1441112693215,
        // loadEventStart: 1441112693214,
        // navigationStart: 1441112691935,
        // redirectEnd: 0,
        // redirectStart: 0,
        // requestStart: 1441112692158,
        // responseEnd: 1441112692687,
        // responseStart: 1441112692686,
        // secureConnectionStart: 0,
        // unloadEventEnd: 0,
        // unloadEventStart: 0
    }
};
*/

function getPerformanceTiming() {
    var performance = window.performance;
 
    if (!performance) {
        // 当前浏览器不支持
        // console.log('你的浏览器不支持 performance 接口');
        return;
    }
 
    var t = performance.timing;
    var times = {};
 
    //【重要】页面加载完成的时间
    //【原因】这几乎代表了用户等待页面可用的时间
    times.load = t.loadEventEnd - t.navigationStart;
 
    //【重要】解析 DOM 树结构的时间
    //【原因】反省下你的 DOM 树嵌套是不是太多了！
    times.dr = t.domComplete - t.responseEnd;
 
    //【重要】重定向的时间
    //【原因】拒绝重定向！比如，http://example.com/ 就不该写成 http://example.com
    times.rr = t.redirectEnd - t.redirectStart;
 
    //【重要】DNS 查询时间
    //【原因】DNS 预加载做了么？页面内是不是使用了太多不同的域名导致域名查询的时间太长？
    // 可使用 HTML5 Prefetch 预查询 DNS ，见：[HTML5 prefetch](http://segmentfault.com/a/1190000000633364)            
    times.dns = t.domainLookupEnd - t.domainLookupStart;
 
    //【重要】读取页面第一个字节的时间
    //【原因】这可以理解为用户拿到你的资源占用的时间，加异地机房了么，加CDN 处理了么？加带宽了么？加 CPU 运算速度了么？
    // TTFB 即 Time To First Byte 的意思
    // 维基百科：https://en.wikipedia.org/wiki/Time_To_First_Byte
    times.ttfb = t.responseStart - t.navigationStart;
 
    //【重要】内容加载完成的时间
    //【原因】页面内容经过 gzip 压缩了么，静态资源 css/js 等压缩了么？
    times.req = t.responseEnd - t.requestStart;
 
    //【重要】执行 onload 回调函数的时间
    //【原因】是否太多不必要的操作都放到 onload 回调函数里执行了，考虑过延迟加载、按需加载的策略么？
    times.le = t.loadEventEnd - t.loadEventStart;
 
    // DNS 缓存时间
    //times.appcache = t.domainLookupStart - t.fetchStart;
 
    // 卸载页面的时间
    //times.unloadEvent = t.unloadEventEnd - t.unloadEventStart;
 
    // TCP 建立连接完成握手的时间
    times.ct = t.connectEnd - t.connectStart;
 
    return times;
}



var cookie = function () {
    return cookie.get.apply(cookie, arguments)
};

var utils = {

    // Is the given value an array? Use ES5 Array.isArray if it's available.
    isArray: Array.isArray || function (value) {
        return Object.prototype.toString.call(value) === '[object Array]';
    },

    // Is the given value a plain object / an object whose constructor is `Object`?
    isPlainObject: function (value) {
        return !!value && Object.prototype.toString.call(value) === '[object Object]';
    },

    // Convert an array-like object to an array – for example `arguments`.
    toArray: function (value) {
        return Array.prototype.slice.call(value);
    },

    // Get the keys of an object. Use ES5 Object.keys if it's available.
    getKeys: Object.keys || function (obj) {
        var keys = [],
             key = '';
        for (key in obj) {
            if (obj.hasOwnProperty(key)) keys.push(key);
        }
        return keys;
    },

    // Unlike JavaScript's built-in escape functions, this method
    // only escapes characters that are not allowed in cookies.
    encode: function (value) {
        return String(value).replace(/[,;"\\=\s%]/g, function (character) {
            return encodeURIComponent(character);
        });
    },

    decode: function (value) {
        return decodeURIComponent(value);
    },

    // Return fallback if the value is not defined, otherwise return value.
    retrieve: function (value, fallback) {
        return value == null ? fallback : value;
    }

};

/*
cookie.defaults = {};

cookie.expiresMultiplier = 60 * 60 * 24;

cookie.set = function (key, value, options) {
    if (utils.isPlainObject(key)) {
        // `key` contains an object with keys and values for cookies, `value` contains the options object.

        for (var k in key) {
            if (key.hasOwnProperty(k)) this.set(k, key[k], value);
        }
    } else {
        options = utils.isPlainObject(options) ? options : { expires: options };

        // Empty string for session cookies.
        var expires = options.expires !== undefined ? options.expires : (this.defaults.expires || ''),
            expiresType = typeof(expires);

        if (expiresType === 'string' && expires !== '') expires = new Date(expires);
        else if (expiresType === 'number') expires = new Date(+new Date + 1000 * this.expiresMultiplier * expires); // This is needed because IE does not support the `max-age` cookie attribute.

        if (expires !== '' && 'toGMTString' in expires) expires = ';expires=' + expires.toGMTString();

        var path = options.path || this.defaults.path;
        path = path ? ';path=' + path : '';

        var domain = options.domain || this.defaults.domain;
        domain = domain ? ';domain=' + domain : '';

        var secure = options.secure || this.defaults.secure ? ';secure' : '';
        if (options.secure === false) secure = '';

        document.cookie = utils.encode(key) + '=' + utils.encode(value) + expires + path + domain + secure;
    }

    return this; // Return the `cookie` object to make chaining possible.
};

cookie.remove = function (keys) {
    keys = utils.isArray(keys) ? keys : utils.toArray(arguments);

    for (var i = 0, l = keys.length; i < l; i++) {
        this.set(keys[i], '', -1);
    }

    return this; // Return the `cookie` object to make chaining possible.
};

cookie.get = function (keys, fallback) {
    var cookies = this.all();

    if (utils.isArray(keys)) {
        var result = {};

        for (var i = 0, l = keys.length; i < l; i++) {
            var value = keys[i];
            result[value] = utils.retrieve(cookies[value], fallback);
        }

        return result;

    } else return utils.retrieve(cookies[keys], fallback);
};

cookie.enabled = function () {
    if (navigator.cookieEnabled) return true;

    var ret = cookie.set('_', '_').get('_') === '_';
    cookie.remove('_');
    return ret;
};
*/

var cookie = {};

cookie.enabled = function () {
    if (navigator.cookieEnabled) return true;

    var ret = cookie.set('_', '_').get('_') === '_';
    cookie.remove('_');
    return ret;
};

cookie.set = function(key, value, options) {
    var d;
    options.expires && (d = new Date, d.setTime(d.getTime() + options.expires));
    document.cookie = utils.encode(key) + "=" + utils.encode(value) + (options.domain ? "; domain=" + options.domain: "") + (options.path ? "; path=" + options.path: "") + (d ? "; expires=" + d.toGMTString() : "") + (options.secure ? "; secure": "")
};
cookie.get = function(a, d) {
    return (a = RegExp("(^| )" + a + "=([^;]*)(;|$)").exec(document.cookie)) ? a[2] : (d || '')
};

/*
 mi  : 是否移动端，1是 0否
 os  : 操作系统
 osv  : 操作系统版本
 bs  : 浏览器
 bsv  : 浏览器版本
 ie : IE6/7/8等
 sc  : 分辨率
 ce  : 是否开启cookie，1是 0否
 lg  : 语言
 ps  : 支持插件
 ft  : 第一次访问时间，单位秒
 rt  : 当次访问时间，单位秒
 j   : 是否支持java
 ti  : 网页标题
 ref : Referer
 c   : 颜色
 cp  : 点击统计， [{x: 0, y: 1, u:'url'}]
*/

var now = Math.round(new Date / 1000) // 当前时间，单位 秒
var data
if (/(MSIE 6)/i.test(navigator.userAgent)) {
    data = {
        mi: /(Mobile)/i.test(navigator.userAgent)? 1: 0
        , os: 'Windows'
        , osv: '6.0'
        , bs: 'IE'
        , bsv: '6.0'
        , sc: screen.width + "," + screen.height
        , ce: cookie.enabled() ? 1 : 0
        , lg: navigator.language
        , ps: []
        , ft: now
        , rt: now
        , j: navigator.javaEnabled()
        , ti: document.title
        , ref: document.referrer
        , url: location.href
        , c: window.screen.colorDepth || 0
    //  , perf: getPerformanceTiming()
    }
} else if (/(MSIE 7)/i.test(navigator.userAgent)) {
    data = {
        mi: /(Mobile)/i.test(navigator.userAgent)? 1: 0
        , os: 'Windows'
        , osv: '6.0'
        , bs: 'IE'
        , bsv: '7.0'
        , sc: screen.width + "," + screen.height
        , ce: cookie.enabled() ? 1 : 0
        , lg: navigator.language
        , ps: []
        , ft: now
        , rt: now
        , j: navigator.javaEnabled()
        , ti: document.title
        , ref: document.referrer
        , url: location.href
        , c: window.screen.colorDepth || 0
    //  , perf: getPerformanceTiming()
    }
} else if (/(MSIE 8)/i.test(navigator.userAgent)) {
    data = {
        mi: /(Mobile)/i.test(navigator.userAgent)? 1: 0
        , os: 'Windows'
        , osv: '6.0'
        , bs: 'IE'
        , bsv: '8.0'
        , sc: screen.width + "," + screen.height
        , ce: cookie.enabled() ? 1 : 0
        , lg: navigator.language
        , ps: []
        , ft: now
        , rt: now
        , j: navigator.javaEnabled()
        , ti: document.title
        , ref: document.referrer
        , url: location.href
        , c: window.screen.colorDepth || 0
    //  , perf: getPerformanceTiming()
    }
} else {
    var ua = new UserAgent()
    data = {
        mi: /(Mobile)/i.test(ua.USER_AGENT)? 1: 0
        , os: ua.OS
        , osv: ua.OS_VERSION
        , bs: ua.BROWSER
        , bsv: ua.BROWSER_VERSION
        , sc: screen.width + "," + screen.height
        , ce: cookie.enabled() ? 1 : 0
        , lg: ua.LANGUAGE
        , ps: []
        , ft: now
        , rt: now
        , j: navigator.javaEnabled()
        , ti: document.title
        , ref: document.referrer
        , url: location.href
        , c: window.screen.colorDepth || 0
    //  , perf: getPerformanceTiming()
    } 
}

if (data.bs === 'IE') {
    data.ie = data.bs + parseInt(data.bsv, 10)
}

// 获取浏览器插件名称列表
var plugins = navigator.plugins

var i = 0, obj, map = {}
while (obj = plugins[i]) {
    if (!map[obj.name]) {
        data.ps.push(obj.name)
    }
    map[obj.name] = 1
    i++
}

function log(s) {
    if (/\bdebug\b/i.test(location.href) && console) {
        console.log(s)
    }
}

function loadScript(url, cb) {
    var el = document.createElement("script")
    el.charset = "utf-8"
    
    cb && (typeof cb === 'function') && (el.readyState ? el.onreadystatechange = function() {
        if ("loaded" === el.readyState || "complete" === el.readyState) el.onreadystatechange = s,
        cb()
    }: el.onload = function() {
        cb()
    })
    
    el.src = url
    
    var fsel = document.getElementsByTagName("script")[0]
    fsel.parentNode.insertBefore(el, fsel)
}

// 汇报普通数据
// data 字符串,需要“&”开头，如 &a=1&b=2
var submitlog = function(data, cb) {
    var img = new Image
    
    img.onload = img.onerror = img.onabort = function() {
        img.onload = img.onerror = img.onabort = null
        img = null
        
        cb && (typeof cb === 'function') && cb(url)
    }
    
    img.src = 'http://'+fluxDomain+'/api/flux?site='+ siteId + '&data='+ encodeURIComponent(JSON.stringify(data))
}

// 汇报热力图等数据
// data 字符串,需要“&”开头，如 &a=1&b=2
var heatmaplog = function(data, cb) {
    var img = new Image
    
    img.onload = img.onerror = img.onabort = function() {
        img.onload = img.onerror = img.onabort = null
        img = null
        
        cb && (typeof cb === 'function') && cb(url)
    }
    
    img.src = 'http://'+fluxDomain+'/api/flux?site='+ siteId + '&click=1&data='+ encodeURIComponent(JSON.stringify(data))
}



// 打印探测结果
//console.log(JSON.stringify(data))

function getSiteId() {
    var scripts = document.getElementsByTagName("script")
    var el, url, re = /^http:\/\/([\w\.]+?)\/flux\.js\?(\w{1,50})$/i
    
    for (var i = scripts.length-1; i >= 0; i--) {
        el = scripts[i]
        url = el? el.src : ''
        
        if (url) {
            var matchs = url.match(re)
            //console.log(matchs)
            if (matchs) {
                fluxDomain = matchs[1]
                siteId = matchs[2]
            }
        }
    }
}
var fluxDomain
var siteId

getSiteId()

// 首次访问时间
var __ft ='__ft_'+ siteId

// 当次会话开始时间
var __rt ='__rt_'+ siteId

// 数据提交次数
var __cn ='__cn_'+ siteId
var ft = cookie.get(__ft, '')
var rt = cookie.get(__rt, '')

var postcount = cookie.get(__cn, 0)
if (!postcount) {postcount=0}
postcount = parseInt(postcount, 10)
postcount += 1

if (ft) {
    data.ft = ft
} else {
    data.ft = now
    cookie.set(__ft, now, {path:'/', expires: 86400000})
}

if (rt) {
    data.rt = rt
} else {
    data.rt = now
    cookie.set(__rt, now, {path:'/', expires: 86400})
}

cookie.set(__cn, postcount, {path:'/', expires: 86400000})

data.cn = postcount
submitlog(data)

var Flux = {}
Flux.SiteId = siteId
Flux.domain = fluxDomain
Flux.submitlog = submitlog
Flux.heatmaplog = heatmaplog
Flux.loadScript = loadScript
Flux.data = data
window.Flux = Flux
}, 0);



//#####################################
//
// 热力图 / 链接点击 统计
//
//#####################################

setTimeout(function() {
var Flux = window.Flux
var data = Flux.data

// 空白点队列，在点击链接后提取上报并清空
var blankPoints = []

// 根据事件对象，获取当前点击事件的坐标
// 需要将 x, y 转换为以中心为原点
function getPoint(x, y, isLink, target) {
    var clientWidth = document.documentElement.clientWidth || document.body.clientWidth
    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop
    var oX = Math.round(clientWidth/2)
    
    var point = {x: (x - oX), y: (y + scrollTop)}
    
    if (target.id) {
       point.id = target.id
    }
    
    //if (isLink) {
    //   point.u = Flux.md5(target.href)
    //}
    return point
} 

var eventHandle = function(e) {
    var target = e.target || e.srcElement
    var isLink = /a/i.test(target.tagName)
    
    blankPoints.push(getPoint(e.clientX, e.clientY, isLink, target))
    
    // 如果点击的是链接或空白处累计点击N次，则上报数据
    if (isLink || blankPoints.length > 2) {
        data.cp = blankPoints
        Flux.heatmaplog(data)
        blankPoints = []
    }
    
    //console.log(blankPoints)
}

if (document.addEventListener) {
    document.addEventListener('mousedown', eventHandle, false)
} else if (document.attachEvent) {
    document.attachEvent("onmousedown", eventHandle)
}
}, 0);


// 链接点击图展示
setTimeout(function() {
    var loadScript = Flux.loadScript
    var url = location.href
    var linkmap = {}
    
    function showText(el, text) {
        var html = '<span style="position:absolute; top:0; left:0; width:100%; height:25px; color:#fff; background-color:rgb(152, 190, 244); opacity:.8; display:inline-block;" title="'+ text +'">'+ text +'</span>'
        
        $(el).css('position', 'relative').append(html)
    }
    
    function showText2(el, text) {
        var html = ''
        var scrollLeft = document.documentElement.scrollLeft
        var scrollTop = document.documentElement.scrollTop
        
        var left = el.getBoundingClientRect().left
        var top = el.getBoundingClientRect().top
        var right = el.getBoundingClientRect().right
        var width = right - left
        
        top += scrollTop
        left += scrollLeft
        //console.log(left, top, width)
        
        if (top && left) {
            html = '<div style="position:absolute; top: '+ top +'px; left:'+ left +'px; width: '+ width +'px; color:#fff; background-color:rgb(152, 190, 244); opacity:.9; display:inline-block;" title="'+ text +'">'+ text +'</div>'
        }
        return html
    }

    
    // 显示链接点击图
    function showLinkmap(data) {
        var htmlList = []
        
        data.forEach(function(item) {
            var elList = null
            if (elList = linkmap[item[0]]) {
                
                elList.forEach(function(el){
                    showText(el, item[1]+"("+item[2]+")")
                    //htmlList.push(html)
                })
                
            }
        })
        
        //document.body.insertAdjacentHTML('beforeEnd', htmlList.join(''))
    }
    
    (url.indexOf('heatlink=1') > 0) && setTimeout(function() {
        // 注意：一定放到setTimeout里面，否则可能找不到 Flux.md5 方法
        var page = ''
        var et = ''
        var st = ''
        
        var matchs = url.match(/[&?]page=(\w+)/)
        if (matchs) {
            page = matchs[1]
        }
        
        matchs = url.match(/[&?]st=(\w+)/)
        if (matchs) {
            st = matchs[1]
        }
        
        matchs = url.match(/[&?]et=(\w+)/)
        if (matchs) {
            et = matchs[1]
        }
            
        var links = document.getElementsByTagName('a')
        
        Array.prototype.forEach.call(links, function(el) {
            if (linkmap[el.href]) {
                linkmap[el.href].push(el)
            } else {
                linkmap[el.href] = [el]
            }
        })
        
        window.fluxShowLinkmap = showLinkmap
        
        Flux.loadScript('http://'+Flux.domain+'/page-clickmap/data-linkmap?page='+page+'&et='+et+'&st='+st+'&callback=fluxShowLinkmap')
    }, 0)
    
}, 0);


setTimeout(function() {
/*!
  * $script.js JS loader & dependency manager
  * https://github.com/ded/script.js
  * (c) Dustin Diaz 2014 | License MIT
  */

(function (name, definition) {
  this[name] = definition()
})('$script', function () {
  var doc = document
    , head = doc.getElementsByTagName('head')[0]
    , s = 'string'
    , f = false
    , push = 'push'
    , readyState = 'readyState'
    , onreadystatechange = 'onreadystatechange'
    , list = {}
    , ids = {}
    , delay = {}
    , scripts = {}
    , scriptpath
    , urlArgs

  function every(ar, fn) {
    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f
    return 1
  }
  function each(ar, fn) {
    every(ar, function (el) {
      fn(el)
      return 1
    })
  }

  function $script(paths, idOrDone, optDone) {
    paths = paths[push] ? paths : [paths]
    var idOrDoneIsDone = idOrDone && idOrDone.call
      , done = idOrDoneIsDone ? idOrDone : optDone
      , id = idOrDoneIsDone ? paths.join('') : idOrDone
      , queue = paths.length
    function loopFn(item) {
      return item.call ? item() : list[item]
    }
    function callback() {
      if (!--queue) {
        list[id] = 1
        done && done()
        for (var dset in delay) {
          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])
        }
      }
    }
    setTimeout(function () {
      each(paths, function loading(path, force) {
        if (path === null) return callback()
        
        if (!force && !/^https?:\/\//.test(path) && scriptpath) {
          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;
        }
        
        if (scripts[path]) {
          if (id) ids[id] = 1
          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)
        }

        scripts[path] = 1
        if (id) ids[id] = 1
        create(path, callback)
      })
    }, 0)
    return $script
  }

  function create(path, fn) {
    var el = doc.createElement('script'), loaded
    el.onload = el.onerror = el[onreadystatechange] = function () {
      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;
      el.onload = el[onreadystatechange] = null
      loaded = 1
      scripts[path] = 2
      fn()
    }
    el.async = 1
    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;
    head.insertBefore(el, head.lastChild)
  }

  $script.get = create

  $script.order = function (scripts, id, done) {
    (function callback(s) {
      s = scripts.shift()
      !scripts.length ? $script(s, id, done) : $script(s, callback)
    }())
  }

  $script.path = function (p) {
    scriptpath = p
  }
  $script.urlArgs = function (str) {
    urlArgs = str;
  }
  $script.ready = function (deps, ready, req) {
    deps = deps[push] ? deps : [deps]
    var missing = [];
    !each(deps, function (dep) {
      list[dep] || missing[push](dep);
    }) && every(deps, function (dep) {return list[dep]}) ?
      ready() : !function (key) {
      delay[key] = delay[key] || []
      delay[key][push](ready)
      req && req(missing)
    }(deps.join('|'))
    return $script
  }

  $script.done = function (idOrDone) {
    $script([null], idOrDone)
  }

  return $script
});

/*
 * JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/*global unescape, define, module */

;(function ($) {
  'use strict'

  /*
  * Add integers, wrapping at 2^32. This uses 16-bit operations internally
  * to work around bugs in some JS interpreters.
  */
  function safe_add (x, y) {
    var lsw = (x & 0xFFFF) + (y & 0xFFFF)
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
    return (msw << 16) | (lsw & 0xFFFF)
  }

  /*
  * Bitwise rotate a 32-bit number to the left.
  */
  function bit_rol (num, cnt) {
    return (num << cnt) | (num >>> (32 - cnt))
  }

  /*
  * These functions implement the four basic operations the algorithm uses.
  */
  function md5_cmn (q, a, b, x, s, t) {
    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)
  }
  function md5_ff (a, b, c, d, x, s, t) {
    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)
  }
  function md5_gg (a, b, c, d, x, s, t) {
    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)
  }
  function md5_hh (a, b, c, d, x, s, t) {
    return md5_cmn(b ^ c ^ d, a, b, x, s, t)
  }
  function md5_ii (a, b, c, d, x, s, t) {
    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)
  }

  /*
  * Calculate the MD5 of an array of little-endian words, and a bit length.
  */
  function binl_md5 (x, len) {
    /* append padding */
    x[len >> 5] |= 0x80 << (len % 32)
    x[(((len + 64) >>> 9) << 4) + 14] = len

    var i
    var olda
    var oldb
    var oldc
    var oldd
    var a = 1732584193
    var b = -271733879
    var c = -1732584194
    var d = 271733878

    for (i = 0; i < x.length; i += 16) {
      olda = a
      oldb = b
      oldc = c
      oldd = d

      a = md5_ff(a, b, c, d, x[i], 7, -680876936)
      d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)
      c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)
      b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)
      a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)
      d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)
      c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)
      b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)
      a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)
      d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)
      c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)
      b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)
      a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)
      d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)
      c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)
      b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)

      a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)
      d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)
      c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)
      b = md5_gg(b, c, d, a, x[i], 20, -373897302)
      a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)
      d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)
      c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)
      b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)
      a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)
      d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)
      c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)
      b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)
      a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)
      d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)
      c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)
      b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)

      a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)
      d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)
      c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)
      b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)
      a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)
      d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)
      c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)
      b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)
      a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)
      d = md5_hh(d, a, b, c, x[i], 11, -358537222)
      c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)
      b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)
      a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)
      d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)
      c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)
      b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)

      a = md5_ii(a, b, c, d, x[i], 6, -198630844)
      d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)
      c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)
      b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)
      a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)
      d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)
      c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)
      b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)
      a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)
      d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)
      c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)
      b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)
      a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)
      d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)
      c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)
      b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)

      a = safe_add(a, olda)
      b = safe_add(b, oldb)
      c = safe_add(c, oldc)
      d = safe_add(d, oldd)
    }
    return [a, b, c, d]
  }

  /*
  * Convert an array of little-endian words to a string
  */
  function binl2rstr (input) {
    var i
    var output = ''
    for (i = 0; i < input.length * 32; i += 8) {
      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF)
    }
    return output
  }

  /*
  * Convert a raw string to an array of little-endian words
  * Characters >255 have their high-byte silently ignored.
  */
  function rstr2binl (input) {
    var i
    var output = []
    output[(input.length >> 2) - 1] = undefined
    for (i = 0; i < output.length; i += 1) {
      output[i] = 0
    }
    for (i = 0; i < input.length * 8; i += 8) {
      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32)
    }
    return output
  }

  /*
  * Calculate the MD5 of a raw string
  */
  function rstr_md5 (s) {
    return binl2rstr(binl_md5(rstr2binl(s), s.length * 8))
  }

  /*
  * Calculate the HMAC-MD5, of a key and some data (raw strings)
  */
  function rstr_hmac_md5 (key, data) {
    var i
    var bkey = rstr2binl(key)
    var ipad = []
    var opad = []
    var hash
    ipad[15] = opad[15] = undefined
    if (bkey.length > 16) {
      bkey = binl_md5(bkey, key.length * 8)
    }
    for (i = 0; i < 16; i += 1) {
      ipad[i] = bkey[i] ^ 0x36363636
      opad[i] = bkey[i] ^ 0x5C5C5C5C
    }
    hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)
    return binl2rstr(binl_md5(opad.concat(hash), 512 + 128))
  }

  /*
  * Convert a raw string to a hex string
  */
  function rstr2hex (input) {
    var hex_tab = '0123456789abcdef'
    var output = ''
    var x
    var i
    for (i = 0; i < input.length; i += 1) {
      x = input.charCodeAt(i)
      output += hex_tab.charAt((x >>> 4) & 0x0F) +
      hex_tab.charAt(x & 0x0F)
    }
    return output
  }

  /*
  * Encode a string as utf-8
  */
  function str2rstr_utf8 (input) {
    return unescape(encodeURIComponent(input))
  }

  /*
  * Take string arguments and return either raw or hex encoded strings
  */
  function raw_md5 (s) {
    return rstr_md5(str2rstr_utf8(s))
  }
  function hex_md5 (s) {
    return rstr2hex(raw_md5(s))
  }
  function raw_hmac_md5 (k, d) {
    return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))
  }
  function hex_hmac_md5 (k, d) {
    return rstr2hex(raw_hmac_md5(k, d))
  }

  function md5 (string, key, raw) {
    if (!key) {
      if (!raw) {
        return hex_md5(string)
      }
      return raw_md5(string)
    }
    if (!raw) {
      return hex_hmac_md5(key, string)
    }
    return raw_hmac_md5(key, string)
  }
  
  $.md5 = md5
  
}(window.Flux))
}, 0)

// JSON
if (typeof JSON !== "object") {
    JSON = {};
}

(function () {
    "use strict";

    var rx_one = /^[\],:{}\s]*$/;
    var rx_two = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;
    var rx_three = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
    var rx_four = /(?:^|:|,)(?:\s*\[)+/g;
    var rx_escapable = /[\\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
    var rx_dangerous = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;

    function f(n) {
        // Format integers to have at least two digits.
        return n < 10
            ? "0" + n
            : n;
    }

    function this_value() {
        return this.valueOf();
    }

    if (typeof Date.prototype.toJSON !== "function") {

        Date.prototype.toJSON = function () {

            return isFinite(this.valueOf())
                ? this.getUTCFullYear() + "-" +
                        f(this.getUTCMonth() + 1) + "-" +
                        f(this.getUTCDate()) + "T" +
                        f(this.getUTCHours()) + ":" +
                        f(this.getUTCMinutes()) + ":" +
                        f(this.getUTCSeconds()) + "Z"
                : null;
        };

        Boolean.prototype.toJSON = this_value;
        Number.prototype.toJSON = this_value;
        String.prototype.toJSON = this_value;
    }

    var gap;
    var indent;
    var meta;
    var rep;


    function quote(string) {

// If the string contains no control characters, no quote characters, and no
// backslash characters, then we can safely slap some quotes around it.
// Otherwise we must also replace the offending characters with safe escape
// sequences.

        rx_escapable.lastIndex = 0;
        return rx_escapable.test(string)
            ? "\"" + string.replace(rx_escapable, function (a) {
                var c = meta[a];
                return typeof c === "string"
                    ? c
                    : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
            }) + "\""
            : "\"" + string + "\"";
    }


    function str(key, holder) {

// Produce a string from holder[key].

        var i;          // The loop counter.
        var k;          // The member key.
        var v;          // The member value.
        var length;
        var mind = gap;
        var partial;
        var value = holder[key];

// If the value has a toJSON method, call it to obtain a replacement value.

        if (value && typeof value === "object" &&
                typeof value.toJSON === "function") {
            value = value.toJSON(key);
        }

// If we were called with a replacer function, then call the replacer to
// obtain a replacement value.

        if (typeof rep === "function") {
            value = rep.call(holder, key, value);
        }

// What happens next depends on the value's type.

        switch (typeof value) {
        case "string":
            return quote(value);

        case "number":

// JSON numbers must be finite. Encode non-finite numbers as null.

            return isFinite(value)
                ? String(value)
                : "null";

        case "boolean":
        case "null":

// If the value is a boolean or null, convert it to a string. Note:
// typeof null does not produce "null". The case is included here in
// the remote chance that this gets fixed someday.

            return String(value);

// If the type is "object", we might be dealing with an object or an array or
// null.

        case "object":

// Due to a specification blunder in ECMAScript, typeof null is "object",
// so watch out for that case.

            if (!value) {
                return "null";
            }

// Make an array to hold the partial results of stringifying this object value.

            gap += indent;
            partial = [];

// Is the value an array?

            if (Object.prototype.toString.apply(value) === "[object Array]") {

// The value is an array. Stringify every element. Use null as a placeholder
// for non-JSON values.

                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || "null";
                }

// Join all of the elements together, separated with commas, and wrap them in
// brackets.

                v = partial.length === 0
                    ? "[]"
                    : gap
                        ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]"
                        : "[" + partial.join(",") + "]";
                gap = mind;
                return v;
            }

// If the replacer is an array, use it to select the members to be stringified.

            if (rep && typeof rep === "object") {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    if (typeof rep[i] === "string") {
                        k = rep[i];
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (
                                gap
                                    ? ": "
                                    : ":"
                            ) + v);
                        }
                    }
                }
            } else {

// Otherwise, iterate through all of the keys in the object.

                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (
                                gap
                                    ? ": "
                                    : ":"
                            ) + v);
                        }
                    }
                }
            }

// Join all of the member texts together, separated with commas,
// and wrap them in braces.

            v = partial.length === 0
                ? "{}"
                : gap
                    ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}"
                    : "{" + partial.join(",") + "}";
            gap = mind;
            return v;
        }
    }

// If the JSON object does not yet have a stringify method, give it one.

    if (typeof JSON.stringify !== "function") {
        meta = {    // table of character substitutions
            "\b": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            "\"": "\\\"",
            "\\": "\\\\"
        };
        JSON.stringify = function (value, replacer, space) {

// The stringify method takes a value and an optional replacer, and an optional
// space parameter, and returns a JSON text. The replacer can be a function
// that can replace values, or an array of strings that will select the keys.
// A default replacer method can be provided. Use of the space parameter can
// produce text that is more easily readable.

            var i;
            gap = "";
            indent = "";

// If the space parameter is a number, make an indent string containing that
// many spaces.

            if (typeof space === "number") {
                for (i = 0; i < space; i += 1) {
                    indent += " ";
                }

// If the space parameter is a string, it will be used as the indent string.

            } else if (typeof space === "string") {
                indent = space;
            }

// If there is a replacer, it must be a function or an array.
// Otherwise, throw an error.

            rep = replacer;
            if (replacer && typeof replacer !== "function" &&
                    (typeof replacer !== "object" ||
                    typeof replacer.length !== "number")) {
                throw new Error("JSON.stringify");
            }

// Make a fake root object containing our value under the key of "".
// Return the result of stringifying the value.

            return str("", {"": value});
        };
    }


// If the JSON object does not yet have a parse method, give it one.

    if (typeof JSON.parse !== "function") {
        JSON.parse = function (text, reviver) {

// The parse method takes a text and an optional reviver function, and returns
// a JavaScript value if the text is a valid JSON text.

            var j;

            function walk(holder, key) {

// The walk method is used to recursively walk the resulting structure so
// that modifications can be made.

                var k;
                var v;
                var value = holder[key];
                if (value && typeof value === "object") {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v;
                            } else {
                                delete value[k];
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value);
            }


// Parsing happens in four stages. In the first stage, we replace certain
// Unicode characters with escape sequences. JavaScript handles many characters
// incorrectly, either silently deleting them, or treating them as line endings.

            text = String(text);
            rx_dangerous.lastIndex = 0;
            if (rx_dangerous.test(text)) {
                text = text.replace(rx_dangerous, function (a) {
                    return "\\u" +
                            ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }

// In the second stage, we run the text against regular expressions that look
// for non-JSON patterns. We are especially concerned with "()" and "new"
// because they can cause invocation, and "=" because it can cause mutation.
// But just to be safe, we want to reject all unexpected forms.

// We split the second stage into 4 regexp operations in order to work around
// crippling inefficiencies in IE's and Safari's regexp engines. First we
// replace the JSON backslash pairs with "@" (a non-JSON character). Second, we
// replace all simple value tokens with "]" characters. Third, we delete all
// open brackets that follow a colon or comma or that begin the text. Finally,
// we look to see that the remaining characters are only whitespace or "]" or
// "," or ":" or "{" or "}". If that is so, then the text is safe for eval.

            if (
                rx_one.test(
                    text
                        .replace(rx_two, "@")
                        .replace(rx_three, "]")
                        .replace(rx_four, "")
                )
            ) {

// In the third stage we use the eval function to compile the text into a
// JavaScript structure. The "{" operator is subject to a syntactic ambiguity
// in JavaScript: it can begin a block or an object literal. We wrap the text
// in parens to eliminate the ambiguity.

                j = eval("(" + text + ")");

// In the optional fourth stage, we recursively walk the new structure, passing
// each name/value pair to a reviver function for possible transformation.

                return (typeof reviver === "function")
                    ? walk({"": j}, "")
                    : j;
            }

// If the text is not JSON parseable, then a SyntaxError is thrown.

            throw new SyntaxError("JSON.parse");
        };
    }
}());